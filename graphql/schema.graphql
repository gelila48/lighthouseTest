"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")


type Query {
 
   books: [Book] @all
   book(id: ID! @eq ): Book @find
   bookSearch(search: String! @eq ): [Book] 
 
    # "Find a single user by an identifying attribute."
    # user(id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])\
    #   email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    # ): User @find

    # "List multiple users."
    # users( name: String @where(operator: "like")
    # ): [User!]! @paginate(defaultCount: 10)
}



type Mutation {

   createBook(
     title: String @rules(apply: ["required"]),
     author: String @rules(apply: ["required"]),
     featured: Boolean,
     link: String,
     description: String,
     image: String
    ): Book @create

   updateBook(
     id: ID  @rules(apply: ["required"]),
     title: String @rules(apply: ["required"]),
     author: String @rules(apply: ["required"]),
     featured: Boolean,
     link: String,
     description: String,
     image: String
    ): Book @update

   deleteBook(
     id: ID! @rules(apply: ["required"])
    ): Book! @delete
  

  "Catagorymutation"

   createCatagory(
     title: String @rules(apply: ["required"])
    ): Catagory @create

   updateCatagory(
     id: ID  @rules(apply: ["required"]),
     title: String @rules(apply: ["required"])
    ): Catagory @update

   deleteCatagory(
     id: ID! @rules(apply: ["required"])
    ): Catagory! @delete
 
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}
 
type Book {
    "Unique primary key."
    id: ID!
    title: String!
    author: String!
    link: String
    description: String
    featured: Boolean
    image: String
    Catagory: Catagory @belongsTo
}

type Catagory {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    title: String!

    "Unique email address."
    Book: [Book]! @hasMany

}